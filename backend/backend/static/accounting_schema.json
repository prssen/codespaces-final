{
  "openapi": "3.0.2",
  "info": {
    "title": "",
    "version": ""
  },
  "paths": {
    "/api/v1/stripe/success/": {
      "get": {
        "operationId": "liststripe_success",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/stripe/cancel/": {
      "get": {
        "operationId": "liststripe_cancels",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "operationId": "listUsers",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createUser",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/users/{id}/": {
      "get": {
        "operationId": "retrieveUser",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateUser",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateUser",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyUser",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/countries/": {
      "get": {
        "operationId": "listCountrys",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createCountry",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/countries/{iso_code}/": {
      "get": {
        "operationId": "retrieveCountry",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "iso_code",
            "in": "path",
            "required": true,
            "description": "A unique value identifying this country.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateCountry",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "iso_code",
            "in": "path",
            "required": true,
            "description": "A unique value identifying this country.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateCountry",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "iso_code",
            "in": "path",
            "required": true,
            "description": "A unique value identifying this country.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyCountry",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "iso_code",
            "in": "path",
            "required": true,
            "description": "A unique value identifying this country.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/addresses/": {
      "get": {
        "operationId": "listAddress",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createAddress",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/addresses/{id}/": {
      "get": {
        "operationId": "retrieveAddress",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this address.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateAddress",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this address.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateAddress",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this address.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyAddress",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this address.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/charities/": {
      "get": {
        "operationId": "listCharitys",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Charity"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createCharity",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Charity"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Charity"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Charity"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Charity"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/charities/{id}/": {
      "get": {
        "operationId": "retrieveCharity",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this charity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Charity"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateCharity",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this charity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Charity"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Charity"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Charity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Charity"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateCharity",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this charity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Charity"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Charity"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Charity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Charity"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyCharity",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this charity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/project_updates/": {
      "get": {
        "operationId": "listProjectUpdates",
        "description": "API endpoint for project updates.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectUpdates"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createProjectUpdate",
        "description": "API endpoint for project updates.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdates"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdates"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdates"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectUpdates"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/project_updates/{id}/": {
      "get": {
        "operationId": "retrieveProjectUpdate",
        "description": "API endpoint for project updates.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this project update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectUpdates"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateProjectUpdate",
        "description": "API endpoint for project updates.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this project update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdates"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdates"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectUpdates"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateProjectUpdate",
        "description": "API endpoint for project updates.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this project update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdates"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdates"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectUpdates"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyProjectUpdate",
        "description": "API endpoint for project updates.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this project update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/appeals/": {
      "get": {
        "operationId": "listProjects",
        "description": "API endpoint for projects, including updates and photo gallery, to be\nretrieved and edited for the charity's appeal page on the donation tracker.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectAppeal"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createProject",
        "description": "API endpoint for projects, including updates and photo gallery, to be\nretrieved and edited for the charity's appeal page on the donation tracker.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAppeal"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAppeal"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAppeal"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAppeal"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/appeals/{id}/": {
      "get": {
        "operationId": "retrieveProject",
        "description": "API endpoint for projects, including updates and photo gallery, to be\nretrieved and edited for the charity's appeal page on the donation tracker.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this project.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAppeal"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateProject",
        "description": "API endpoint for projects, including updates and photo gallery, to be\nretrieved and edited for the charity's appeal page on the donation tracker.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this project.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAppeal"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAppeal"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAppeal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAppeal"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateProject",
        "description": "API endpoint for projects, including updates and photo gallery, to be\nretrieved and edited for the charity's appeal page on the donation tracker.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this project.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAppeal"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAppeal"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAppeal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAppeal"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyProject",
        "description": "API endpoint for projects, including updates and photo gallery, to be\nretrieved and edited for the charity's appeal page on the donation tracker.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this project.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/funds/": {
      "get": {
        "operationId": "listFunds",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fund"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createFund",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fund"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/funds/{id}/": {
      "get": {
        "operationId": "retrieveFund",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this fund.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateFund",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this fund.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fund"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateFund",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this fund.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fund"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyFund",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this fund.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/accounts/": {
      "get": {
        "operationId": "listAccounts",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createAccount",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/accounts/{id}/": {
      "get": {
        "operationId": "retrieveAccount",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this account.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateAccount",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this account.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateAccount",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this account.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyAccount",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this account.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/bank_accounts/": {
      "get": {
        "operationId": "listBankAccounts",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankAccount"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createBankAccount",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/bank_accounts/{id}/": {
      "get": {
        "operationId": "retrieveBankAccount",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this bank account.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateBankAccount",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this bank account.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateBankAccount",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this bank account.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyBankAccount",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this bank account.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/transactions/": {
      "get": {
        "operationId": "listTransactions",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createTransaction",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/transactions/{id}/": {
      "get": {
        "operationId": "retrieveTransaction",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this transaction.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateTransaction",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this transaction.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateTransaction",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this transaction.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyTransaction",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this transaction.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/donations/": {
      "get": {
        "operationId": "listDonations",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createDonation",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Donation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Donation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Donation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donation"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/donations/{id}/": {
      "get": {
        "operationId": "retrieveDonation",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this donation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donation"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateDonation",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this donation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Donation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Donation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Donation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donation"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateDonation",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this donation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Donation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Donation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Donation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donation"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyDonation",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this donation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/donors/": {
      "get": {
        "operationId": "listDonors",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonorList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createDonor",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/donors/{id}/": {
      "get": {
        "operationId": "retrieveDonor",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this donor.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateDonor",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this donor.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateDonor",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this donor.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyDonor",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this donor.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/suppliers/": {
      "get": {
        "operationId": "listSuppliers",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createSupplier",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/suppliers/{id}/": {
      "get": {
        "operationId": "retrieveSupplier",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this supplier.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateSupplier",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this supplier.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateSupplier",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this supplier.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroySupplier",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this supplier.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/expenses/": {
      "get": {
        "operationId": "listExpenses",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Expense"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createExpense",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Expense"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Expense"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Expense"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/expenses/{id}/": {
      "get": {
        "operationId": "retrieveExpense",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this expense.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateExpense",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this expense.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Expense"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Expense"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Expense"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateExpense",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this expense.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Expense"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Expense"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Expense"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyExpense",
        "description": "API endpoint that allows addresses to be viewed or edited.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this expense.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/dj-rest-auth/logout/": {
      "get": {
        "operationId": "listLogouts",
        "description": "Calls Django logout method and delete the Token object\nassigned to the current User object.\n\nAccepts/Returns nothing.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dj-rest-auth"
        ]
      },
      "post": {
        "operationId": "createLogout",
        "description": "Calls Django logout method and delete the Token object\nassigned to the current User object.\n\nAccepts/Returns nothing.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dj-rest-auth"
        ]
      }
    },
    "/dj-rest-auth/user/": {
      "get": {
        "operationId": "retrieveUserDetails",
        "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dj-rest-auth"
        ]
      },
      "put": {
        "operationId": "updateUserDetails",
        "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dj-rest-auth"
        ]
      },
      "patch": {
        "operationId": "partialUpdateUserDetails",
        "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dj-rest-auth"
        ]
      }
    },
    "/api/v1/stripe/": {
      "post": {
        "operationId": "createstripe_checkout",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/dj-rest-auth/password/reset/": {
      "post": {
        "operationId": "createPasswordReset",
        "description": "Calls Django Auth PasswordResetForm save method.\n\nAccepts the following POST parameters: email\nReturns the success/fail message.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordReset"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dj-rest-auth"
        ]
      }
    },
    "/dj-rest-auth/password/reset/confirm/": {
      "post": {
        "operationId": "createPasswordResetConfirm",
        "description": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.\n\nAccepts the following POST parameters: token, uid,\n    new_password1, new_password2\nReturns the success/fail message.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetConfirm"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dj-rest-auth"
        ]
      }
    },
    "/dj-rest-auth/login/": {
      "post": {
        "operationId": "createLogin",
        "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dj-rest-auth"
        ]
      }
    },
    "/dj-rest-auth/password/change/": {
      "post": {
        "operationId": "createPasswordChange",
        "description": "Calls Django Auth SetPasswordForm save method.\n\nAccepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChange"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChange"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChange"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordChange"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dj-rest-auth"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+\\z",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The groups this user belongs to. A user will get all permissions granted to each of their groups."
          }
        },
        "required": [
          "username"
        ]
      },
      "Country": {
        "type": "object",
        "properties": {
          "iso_code": {
            "type": "string",
            "maxLength": 3
          },
          "name": {
            "type": "string",
            "maxLength": 200
          }
        },
        "required": [
          "iso_code",
          "name"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "address1": {
            "type": "string",
            "maxLength": 200
          },
          "address2": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "address3": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "postal_code": {
            "type": "string",
            "maxLength": 32
          },
          "district": {
            "type": "object",
            "properties": {
              "pk": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "maxLength": 200
              }
            },
            "required": [
              "name"
            ],
            "nullable": true
          },
          "city": {
            "type": "object",
            "properties": {
              "pk": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "maxLength": 200
              }
            },
            "required": [
              "name"
            ],
            "nullable": true
          },
          "region": {
            "type": "object",
            "properties": {
              "pk": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "maxLength": 200
              },
              "code": {
                "type": "string",
                "nullable": true,
                "maxLength": 3
              },
              "state_area_code": {
                "type": "string",
                "nullable": true,
                "maxLength": 50
              }
            },
            "required": [
              "name"
            ],
            "nullable": true
          },
          "country": {
            "type": "object",
            "properties": {
              "iso_code": {
                "type": "string",
                "maxLength": 3
              },
              "name": {
                "type": "string",
                "maxLength": 200
              }
            },
            "required": [
              "iso_code",
              "name"
            ],
            "nullable": true
          }
        },
        "required": [
          "address1",
          "postal_code",
          "district",
          "city",
          "region",
          "country"
        ]
      },
      "Charity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 160
          },
          "sector": {
            "type": "string",
            "nullable": true,
            "maxLength": 64
          },
          "legal_structure": {
            "enum": [
              "CIO",
              "COMP",
              "UNC",
              "TR",
              "OTH"
            ],
            "type": "string",
            "nullable": true
          },
          "legal_structure_other": {
            "type": "string",
            "nullable": true,
            "maxLength": 64
          },
          "charity_commission_number": {
            "type": "string",
            "nullable": true,
            "pattern": "^\\d+(?:\\d+)*\\z",
            "maxLength": 8,
            "minLength": 8
          },
          "slogan": {
            "type": "string",
            "nullable": true,
            "maxLength": 150
          },
          "mission": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "email",
          "name"
        ]
      },
      "ProjectUpdates": {
        "type": "object",
        "properties": {
          "update_title": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "text": {
            "type": "string"
          },
          "media": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "media": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "required": [
                "media"
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "text",
          "media"
        ]
      },
      "ProjectAppeal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "project": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "maxLength": 200
              },
              "start_date": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "end_date": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "target_donations_currency": {
                "type": "string",
                "readOnly": true
              },
              "target_donations": {
                "type": "string",
                "format": "decimal",
                "multipleOf": 0.0001,
                "maximum": 1000000000000000,
                "minimum": -1000000000000000
              }
            },
            "required": [
              "name",
              "target_donations"
            ]
          },
          "updates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "update_title": {
                  "type": "string",
                  "nullable": true,
                  "maxLength": 200
                },
                "text": {
                  "type": "string"
                },
                "media": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "media": {
                        "type": "string",
                        "format": "binary"
                      }
                    },
                    "required": [
                      "media"
                    ]
                  },
                  "nullable": true
                }
              },
              "required": [
                "text",
                "media"
              ]
            },
            "nullable": true
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "project": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 200
                    },
                    "start_date": {
                      "type": "string",
                      "format": "date",
                      "nullable": true
                    },
                    "end_date": {
                      "type": "string",
                      "format": "date",
                      "nullable": true
                    },
                    "target_donations_currency": {
                      "type": "string",
                      "readOnly": true
                    },
                    "target_donations": {
                      "type": "string",
                      "format": "decimal",
                      "multipleOf": 0.0001,
                      "maximum": 1000000000000000,
                      "minimum": -1000000000000000
                    }
                  },
                  "required": [
                    "name",
                    "target_donations"
                  ],
                  "nullable": true
                },
                "photo": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "required": [
                "project"
              ]
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "subtitle": {
            "type": "string",
            "maxLength": 400
          },
          "date_started": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "date_ended": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "story": {
            "type": "string",
            "nullable": true
          },
          "is_live": {
            "type": "boolean"
          }
        },
        "required": [
          "project"
        ]
      },
      "Fund": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "fund_name": {
            "type": "string",
            "maxLength": 200
          }
        },
        "required": [
          "fund_name"
        ]
      },
      "FundDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "account_name": {
                  "type": "string",
                  "maxLength": 200
                },
                "code": {
                  "type": "integer",
                  "maximum": 2147483647,
                  "minimum": -2147483648
                },
                "ultimate_parent": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "readOnly": true
                    },
                    "name": {
                      "enum": [
                        "AST",
                        "LIA",
                        "INC",
                        "EXP",
                        "EQU"
                      ],
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "maximum": 2147483647,
                      "minimum": -2147483648
                    }
                  },
                  "required": [
                    "name",
                    "code"
                  ],
                  "nullable": true
                },
                "parent_account": {
                  "type": "string",
                  "nullable": true
                },
                "standard_account": {
                  "type": "string",
                  "nullable": true
                },
                "fund": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "readOnly": true
                    },
                    "fund_name": {
                      "type": "string",
                      "maxLength": 200
                    }
                  },
                  "required": [
                    "fund_name"
                  ],
                  "nullable": true
                }
              },
              "required": [
                "account_name",
                "code",
                "parent_account",
                "standard_account"
              ]
            }
          },
          "fund_name": {
            "type": "string",
            "maxLength": 200
          }
        },
        "required": [
          "accounts",
          "fund_name"
        ]
      },
      "Account": {
        "type": "object",
        "properties": {
          "account_name": {
            "type": "string",
            "maxLength": 200
          },
          "code": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "ultimate_parent": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "enum": [
                  "AST",
                  "LIA",
                  "INC",
                  "EXP",
                  "EQU"
                ],
                "type": "string"
              },
              "code": {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              }
            },
            "required": [
              "name",
              "code"
            ],
            "nullable": true
          },
          "parent_account": {
            "type": "string",
            "nullable": true
          },
          "standard_account": {
            "type": "string",
            "nullable": true
          },
          "fund": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "fund_name": {
                "type": "string",
                "maxLength": 200
              }
            },
            "required": [
              "fund_name"
            ],
            "nullable": true
          }
        },
        "required": [
          "account_name",
          "code",
          "parent_account",
          "standard_account"
        ]
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "double_entry_account": {
            "type": "string",
            "nullable": true
          },
          "account_type": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "account_number": {
            "type": "string",
            "maxLength": 35
          },
          "sort_code": {
            "type": "string",
            "maxLength": 6
          },
          "bank_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "routing_number": {
            "type": "string",
            "pattern": "^\\d+$",
            "maxLength": 9
          },
          "owner": {
            "type": "string"
          }
        },
        "required": [
          "double_entry_account",
          "account_number",
          "sort_code",
          "routing_number",
          "owner"
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "vat_rate": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "maxLength": 200
              },
              "amount": {
                "type": "string",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "amount",
              "description"
            ],
            "nullable": true
          },
          "source_doc": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "attachments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary",
                      "nullable": true
                    }
                  }
                },
                "nullable": true
              },
              "date": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "required": [
              "attachments"
            ],
            "nullable": true
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "account": {
                  "type": "string",
                  "readOnly": true
                },
                "amount_currency": {
                  "type": "string",
                  "readOnly": true
                },
                "amount": {
                  "type": "string",
                  "format": "decimal",
                  "multipleOf": 0.0001,
                  "maximum": 1000000000000000,
                  "minimum": -1000000000000000
                },
                "narration": {
                  "type": "string",
                  "nullable": true
                },
                "direction": {
                  "enum": [
                    1,
                    -1
                  ],
                  "type": "integer",
                  "minimum": -2147483648,
                  "maximum": 2147483647
                },
                "transaction": {
                  "type": "integer"
                }
              },
              "required": [
                "amount",
                "direction",
                "transaction"
              ]
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "VAT_rate": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "vat_rate",
          "entries"
        ]
      },
      "DonationList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "donor": {
            "type": "string"
          },
          "amount_calc": {
            "type": "string",
            "readOnly": true
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1000000000000000,
            "minimum": -1000000000000000
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "reference": {
            "type": "string",
            "nullable": true,
            "pattern": "^[0-9a-zA-Z]*$",
            "maxLength": 64
          },
          "amount_currency": {
            "type": "string",
            "readOnly": true
          },
          "memo": {
            "type": "string",
            "nullable": true
          },
          "acknowledged": {
            "type": "boolean"
          },
          "payment_method": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "received_by": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "donor",
          "amount"
        ]
      },
      "Donation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "received_by": {
            "type": "object",
            "properties": {
              "pk": {
                "type": "integer",
                "readOnly": true
              },
              "url": {
                "type": "string",
                "readOnly": true
              },
              "username": {
                "type": "string",
                "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                "pattern": "^[\\w.@+-]+\\z",
                "maxLength": 150
              },
              "email": {
                "type": "string",
                "format": "email",
                "maxLength": 254
              },
              "groups": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The groups this user belongs to. A user will get all permissions granted to each of their groups."
              }
            },
            "required": [
              "username"
            ]
          },
          "transaction": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "vat_rate": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "amount": {
                    "type": "string",
                    "format": "decimal",
                    "multipleOf": 0.01,
                    "maximum": 100,
                    "minimum": 0
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "amount",
                  "description"
                ],
                "nullable": true
              },
              "source_doc": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "file": {
                          "type": "string",
                          "format": "binary",
                          "nullable": true
                        }
                      }
                    },
                    "nullable": true
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                },
                "required": [
                  "attachments"
                ],
                "nullable": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "readOnly": true
                    },
                    "account": {
                      "type": "string",
                      "readOnly": true
                    },
                    "amount_currency": {
                      "type": "string",
                      "readOnly": true
                    },
                    "amount": {
                      "type": "string",
                      "format": "decimal",
                      "multipleOf": 0.0001,
                      "maximum": 1000000000000000,
                      "minimum": -1000000000000000
                    },
                    "narration": {
                      "type": "string",
                      "nullable": true
                    },
                    "direction": {
                      "enum": [
                        1,
                        -1
                      ],
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "transaction": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "amount",
                    "direction",
                    "transaction"
                  ]
                },
                "nullable": true
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "VAT_rate": {
                "type": "integer",
                "nullable": true
              }
            },
            "required": [
              "vat_rate",
              "entries"
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "reference": {
            "type": "string",
            "nullable": true,
            "pattern": "^[0-9a-zA-Z]*$",
            "maxLength": 64
          },
          "amount_currency": {
            "type": "string",
            "readOnly": true
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1000000000000000,
            "minimum": -1000000000000000
          },
          "memo": {
            "type": "string",
            "nullable": true
          },
          "acknowledged": {
            "type": "boolean"
          },
          "payment_method": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "donor": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "received_by",
          "transaction",
          "amount"
        ]
      },
      "DonorList": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 64
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 64
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "giving_stage": {
            "enum": [
              "U",
              "Q",
              "C",
              "S",
              "SS"
            ],
            "type": "string"
          },
          "donated": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Donor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "address": {
            "type": "object",
            "properties": {
              "pk": {
                "type": "integer",
                "readOnly": true
              },
              "address1": {
                "type": "string",
                "maxLength": 200
              },
              "address2": {
                "type": "string",
                "nullable": true,
                "maxLength": 200
              },
              "address3": {
                "type": "string",
                "nullable": true,
                "maxLength": 200
              },
              "postal_code": {
                "type": "string",
                "maxLength": 32
              },
              "district": {
                "type": "object",
                "properties": {
                  "pk": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 200
                  }
                },
                "required": [
                  "name"
                ],
                "nullable": true
              },
              "city": {
                "type": "object",
                "properties": {
                  "pk": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 200
                  }
                },
                "required": [
                  "name"
                ],
                "nullable": true
              },
              "region": {
                "type": "object",
                "properties": {
                  "pk": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "code": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 3
                  },
                  "state_area_code": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 50
                  }
                },
                "required": [
                  "name"
                ],
                "nullable": true
              },
              "country": {
                "type": "object",
                "properties": {
                  "iso_code": {
                    "type": "string",
                    "maxLength": 3
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 200
                  }
                },
                "required": [
                  "iso_code",
                  "name"
                ],
                "nullable": true
              }
            },
            "required": [
              "address1",
              "postal_code",
              "district",
              "city",
              "region",
              "country"
            ],
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "title": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "nullable": true,
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 64
          },
          "middle_names": {
            "type": "string",
            "nullable": true,
            "maxLength": 400
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 64
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "occupation": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "nationality": {
            "type": "string",
            "nullable": true,
            "maxLength": 64
          },
          "giving_stage": {
            "enum": [
              "U",
              "Q",
              "C",
              "S",
              "SS"
            ],
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "email"
        ]
      },
      "SupplierList": {
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "email",
          "city",
          "country"
        ]
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "primary_contact": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "maxLength": 128
              },
              "email": {
                "type": "string",
                "format": "email",
                "maxLength": 254
              },
              "avatar": {
                "type": "string",
                "format": "binary",
                "nullable": true
              },
              "title": {
                "enum": [
                  0,
                  1,
                  2,
                  3
                ],
                "type": "integer",
                "nullable": true,
                "minimum": -2147483648,
                "maximum": 2147483647
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "maxLength": 64
              },
              "middle_names": {
                "type": "string",
                "nullable": true,
                "maxLength": 400
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "maxLength": 64
              },
              "birthdate": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "suffix": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "occupation": {
                "type": "string",
                "nullable": true,
                "maxLength": 200
              },
              "nationality": {
                "type": "string",
                "nullable": true,
                "maxLength": 64
              },
              "address": {
                "type": "integer",
                "nullable": true
              }
            },
            "required": [
              "email"
            ],
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 160
          },
          "sector": {
            "type": "string",
            "nullable": true,
            "maxLength": 64
          },
          "display_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "VAT_number": {
            "type": "string",
            "nullable": true,
            "maxLength": 15
          },
          "is_VAT_number_validated": {
            "type": "boolean"
          },
          "address": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "primary_contact",
          "email",
          "name"
        ]
      },
      "Expense": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "supplier": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "transaction": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "vat_rate": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 200
                    },
                    "amount": {
                      "type": "string",
                      "format": "decimal",
                      "multipleOf": 0.01,
                      "maximum": 100,
                      "minimum": 0
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "amount",
                    "description"
                  ],
                  "nullable": true
                },
                "source_doc": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "readOnly": true
                    },
                    "attachments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "file": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true
                          }
                        }
                      },
                      "nullable": true
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "attachments"
                  ],
                  "nullable": true
                },
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "readOnly": true
                      },
                      "account": {
                        "type": "string",
                        "readOnly": true
                      },
                      "amount_currency": {
                        "type": "string",
                        "readOnly": true
                      },
                      "amount": {
                        "type": "string",
                        "format": "decimal",
                        "multipleOf": 0.0001,
                        "maximum": 1000000000000000,
                        "minimum": -1000000000000000
                      },
                      "narration": {
                        "type": "string",
                        "nullable": true
                      },
                      "direction": {
                        "enum": [
                          1,
                          -1
                        ],
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "transaction": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "amount",
                      "direction",
                      "transaction"
                    ]
                  },
                  "nullable": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time"
                },
                "VAT_rate": {
                  "type": "integer",
                  "nullable": true
                }
              },
              "required": [
                "vat_rate",
                "entries"
              ]
            }
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "payment_type": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "expense_type": {
            "type": "string",
            "maxLength": 64
          }
        },
        "required": [
          "transaction",
          "expense_type"
        ]
      },
      "UserDetails": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+\\z",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          }
        },
        "required": [
          "username"
        ]
      },
      "PasswordReset": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "PasswordResetConfirm": {
        "type": "object",
        "properties": {
          "new_password1": {
            "type": "string",
            "maxLength": 128
          },
          "new_password2": {
            "type": "string",
            "maxLength": 128
          },
          "uid": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "new_password1",
          "new_password2",
          "uid",
          "token"
        ]
      },
      "Login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password"
        ]
      },
      "PasswordChange": {
        "type": "object",
        "properties": {
          "new_password1": {
            "type": "string",
            "maxLength": 128
          },
          "new_password2": {
            "type": "string",
            "maxLength": 128
          }
        },
        "required": [
          "new_password1",
          "new_password2"
        ]
      }
    }
  }
}
